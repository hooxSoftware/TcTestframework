<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_TestBase" Id="{77b52f8d-9a49-403a-aba1-80915f687878}" SpecialFunc="None">
    <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Dieser Baustein stellt die Basis für einen Unittest dar und enthält
alle notwendigen Variablen und Methoden zur Testauswertung.

-------------------------------------------------------------------------------
Input
-

Output
	o_eResult: EResult_t;
******************************************************************************)
FUNCTION_BLOCK FB_TestBase
    IMPLEMENTS ITestBase_t
VAR_INPUT
END_VAR
VAR_OUTPUT
	o_eResult       : EResult_t;
END_VAR
VAR
	strId	  			: ObjectId_t;
	strClassName	: ObjectId_t;
	strPath			: ObjectId_t;
	strMessage 	 	: StrMessage_t;
	u32StartTime	: UDINT;
	u32EndTime		: UDINT;
	iTestSuite     : ITestsuite_t;
	bRegistered 	: BOOL;
	sResult        : STestcase_t;
	assert         : FB_Assertion;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
	]]></ST>
    </Implementation>
    <Method Name="_cleanup" Id="{344aee8e-b817-4cb6-9aba-783306fb7b3f}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.cleanup
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode...

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL _cleanup : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

	_cleanup := cleanup();

    IF _cleanup = ERetCode_t.eRetDone THEN
        setEndTime();
    END_IF;	
	
    CASE assert.o_eState OF 

    EAssertion_t.eStateFailed:
        o_eResult := EResult_t.eStateFailed;

    EAssertion_t.eStateFailedFatal:
        o_eResult := EResult_t.eStateFailedFatal;

    END_CASE;	]]></ST>
      </Implementation>
    </Method>
    <Method Name="_execute" Id="{7a2e47ea-4d60-41f0-a3d6-a81f0185c513}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.execute
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode...

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL _execute : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	_execute := execute();	

]]></ST>
      </Implementation>
    </Method>
    <Method Name="_prepare" Id="{542f6515-c2b9-44d6-8c08-2dee2ccb31ed}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.prepare
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode...

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL _prepare : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	sResult.u32Passed 	  := 0;
	sResult.u32Failed 	  := 0;
	u32StartTime 	        := 0;
	u32EndTime 		        := 0;
	o_eResult 		        := EResult_t.eStateIdle;

	_prepare := prepare();

    IF _prepare = ERetCode_t.eRetDone THEN
        setStartTime();
    END_IF;]]></ST>
      </Implementation>
    </Method>
    <Method Name="cleanup" Id="{bb611570-6ab2-451b-9f0d-51e2ce59af0a}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.cleanup
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode...

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
METHOD PUBLIC cleanup : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	cleanup := ERetCode_t.eRetFailed;

	
	
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="execute" Id="{eaaea70b-9bf9-4b40-b05d-957421faa196}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.execute
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode...

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
METHOD PUBLIC execute : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	Execute := ERetCode_t.eRetFailed;	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{4cb36c1a-3bd9-4b40-bdb1-0e89fb27e2fa}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.FB_init
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains 	: BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode 	: BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	i_strId	  		: ObjectId_t;
	i_strClassName	: ObjectId_t;
	i_strPath 		: ObjectId_t;
	i_iTestSuite 	: ITestSuite_t;
	i_bExecute      : BOOL := true; 
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[	
	strId 		 	:= i_strId;
	strClassName 	:= i_strClassName;
	strPath 	 		:= i_strPath;
	iTestSuite 	 	:= i_iTestSuite;

    IF i_bExecute = FALSE THEN
        o_eResult := EResult_t.eStateSkipped;
    END_IF;
	
	register();]]></ST>
      </Implementation>
    </Method>
    <Method Name="getClassName" Id="{fe0c9224-6b8f-4968-bd60-2e0b1dc4c7d8}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getId
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL getClassName : ObjectId_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getClassName := strClassName;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getFailed" Id="{03b873b5-0f90-4435-8771-5dc65ef5e0d1}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getFailed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL getFailed : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getFailed := assert.o_u32Failed;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getId" Id="{3201004a-c0ba-477e-8045-eedf4c12dcd0}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getId
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL getId : ObjectId_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getId := strId;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getMessage" Id="{afb1fb13-c5eb-4812-98a0-96deb4f8231a}">
      <Declaration><![CDATA[METHOD PUBLIC FINAL getMessage : StrMessage_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getMessage := strMessage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getPassed" Id="{2d53e756-4b16-44f6-b072-8c9bc39b56a8}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getPassed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL getPassed : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getPassed := assert.o_u32Passed;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getPath" Id="{e3a99e4d-69cf-4522-86d0-57b9b9298cbb}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getPassed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL getPath : ObjectId_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getPath := strPath;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getSystemTime" Id="{dc291d5d-13e7-498d-ab24-a88e76a0f5f2}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getPassed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PRIVATE FINAL getSystemTime : UDINT
VAR_INPUT
END_VAR
VAR
	u64Time : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	u64Time := F_GetSystemTime()/10000;


	getSystemTime := to_udint(u64Time and 16#FFFFFFFF);]]></ST>
      </Implementation>
    </Method>
    <Method Name="getTime" Id="{289a6643-aea8-41f4-9573-9f8f1e125c8e}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getPassed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC FINAL getTime : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getTime := 0;

	IF u32EndTime > u32StartTime THEN
		getTime := u32EndTime - u32StartTime;
	END_IF;]]></ST>
      </Implementation>
    </Method>
    <Method Name="logError" Id="{16a351f0-cd4d-4e8b-bead-0c78616d52ea}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.logError
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PROTECTED FINAL logError : BOOL
VAR_INPUT
	i_strMessage : StrMessage_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	ADSLOGSTR(msgCtrlMask 	:= ADSLOG_MSGTYPE_ERROR , 
			  msgFmtStr 	:= i_strMessage, 
			  strArg 		:= '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="logInfo" Id="{2a28e610-d91b-4870-a421-7bc6546ff390}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.logInfo
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD INTERNAL FINAL logInfo : BOOL
VAR_INPUT
	i_strMessage : StrMessage_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	ADSLOGSTR(msgCtrlMask 	:= ADSLOG_MSGTYPE_HINT , 
			  msgFmtStr 	:= i_strMessage, 
			  strArg 		:= '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="prepare" Id="{571b8d1e-086f-4be7-aee6-f996b70e4b02}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.prepare
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode...

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
METHOD PUBLIC prepare : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	prepare := ERetCode_t.eRetFailed;]]></ST>
      </Implementation>
    </Method>
    <Method Name="register" Id="{4a228bed-2579-4e19-893d-8dcd5cfaa8a3}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.register
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD INTERNAL FINAL register : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	IF iTestSuite <> 0 	AND 
       bRegistered = FALSE  THEN
		
	   bRegistered := iTestSuite.addTestcase(THIS^);
	
	END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Result" Id="{098c66a5-b85f-4544-bdc8-e9830f10d1fa}">
      <Declaration><![CDATA[{warning 'Eigenschaftenimplementierung hinzufügen'}
PROPERTY Result : STestcase_t
]]></Declaration>
      <Get Name="Get" Id="{74b42ec5-7997-4155-b252-215f59ff35a1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[   
	sResult.u32Time 	:= getTime();
	sResult.eState  	:= o_eResult; 
	sResult.u32Passed := assert.o_u32Passed;
	sResult.u32Failed := assert.o_u32Failed;

	CASE assert.o_eState OF
	EAssertion_t.eStatePassed:
		o_eResult := EResult_t.eStatePassed;
	EAssertion_t.eStatefailed:
		o_eResult := EResult_t.eStateFailed;
	EAssertion_t.eStateFailedFatal:
		o_eResult := EResult_t.eStateFailedFatal;
	END_CASE;

	Result          	:= sResult;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="setEndTime" Id="{2f133e6d-150e-424a-a9c1-5a581e939cfa}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getPassed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD INTERNAL FINAL setEndTime : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	IF u32EndTime = 0 THEN
		u32EndTime := getSystemTime();
	END_IF;
	setEndTime := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="setMessage" Id="{5e945eba-6cfb-4739-8a87-efafbad421bc}">
      <Declaration><![CDATA[METHOD PROTECTED FINAL setMessage
VAR_INPUT
	strValue : StrMessage_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	IF o_eResult < EResult_t.eStateFailed THEN
		strMessage := strValue;
	END_IF;]]></ST>
      </Implementation>
    </Method>
    <Method Name="setStartTime" Id="{8cc3bd6c-8aa2-4c8c-8cf1-b74a81a48cb3}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.getPassed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD INTERNAL FINAL setStartTime : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	IF u32StartTime = 0 THEN
		u32StartTime   	:= getSystemTime();
	END_IF;
	setStartTime := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="strncmp" Id="{ba3fcb40-c976-48c8-9fd0-cd1feb115e5f}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.strncmp
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
	strInput 	: StringHandle_t;
	strCompare 	: StringHandle_t;
	s16Size		: INT;

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PRIVATE FINAL strncmp : BOOL
VAR_INPUT
	strInput 	: StringHandle_t;
	strCompare 	: StringHandle_t;
	s16Size		: INT;
END_VAR
VAR
	s16Size1 : INT;
	s16Size2 : INT;
	s16Diff  : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
   s16Size1:= LEN(strInput^); 
	s16Size2:= LEN(strCompare^); 
	
	strncmp := FALSE;
	
	s16Diff := s16Size1 - s16Size2;
   
	// vergleich nur wenn beide Strings
	// gleich groß sind.
	IF s16Diff  = 0 THEN

		strncmp := TRUE;
	
		WHILE(s16Size > 0) DO

			IF strInput^ <> strCompare^ THEN
				strncmp := FALSE;
			END_IF;  
 
			strInput   := strInput + 1;
			strCompare := strCompare + 1;
			s16Size    := s16Size - 1;

		END_WHILE


	
	END_IF;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="validate" Id="{26cbef17-aced-449e-9fb6-d6b834f5b8ef}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestBase.validate
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
	var1 : ANY;
	var2 : ANY;

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PRIVATE FINAL validate : BOOL
VAR_INPUT
	var1 : ANY;
	var2 : ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	validate := FALSE;
	
	IF (var1.pValue = 0 OR var2.pValue = 0) THEN
		logError(concat('Assert validation fails with NULL-Pointer: ', strId));
		RETURN;
	END_IF

	IF (var1.TypeClass <> var2.TypeClass) THEN
		logError(concat('Assert validation fails with TypeClass Error: ', strId));
		RETURN;
	END_IF;	
	
	IF (var1.diSize <> var2.diSize) THEN
		logError(concat('Assert validation fails with different size: ', strId));
		RETURN;
	END_IF;	
	
	validate := true;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>