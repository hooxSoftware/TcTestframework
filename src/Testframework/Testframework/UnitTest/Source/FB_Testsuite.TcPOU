<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_Testsuite" Id="{ae8bbd51-73a9-4be0-b082-2ec8a068e7f6}" SpecialFunc="None">
    <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Dieser Baustein enthält alle zugeordneten Testfälle. Ein Testfall
ist ein abgeleiteter Baustein (FB) von FB_UnitTestBase.

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
FUNCTION_BLOCK FB_Testsuite
VAR_INPUT
	i_bStart : BOOL;
END_VAR
VAR_OUTPUT
	o_eState  		: EState_t;
	o_eResult 		: EResult_t;
END_VAR
VAR
	strId			: ObjectId_t;
	strPath			: ObjectId_t;
	bRegistered     : BOOL;
	a_pTest  		: ARRAY [0..255] OF TestCaseHandle_t;
	pTest     		: TestCaseHandle_t;
	u16TestCases  	: UINT;
	u16Index 		: UINT;
	sStatistic 		: SStatistic_t;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
	CASE o_eState OF
		
	EState_t.eStateInit:
	
		o_eState 	:= EState_t.eStateError;
		IF bRegistered = TRUE THEN
			o_eState 	:= EState_t.eStateIdle;
		END_IF;
		
	EState_t.eStateIdle:

		u16Index := 0;

		IF i_bStart = TRUE THEN
			logInfo(CONCAT('Run Testsuite ', strId));
			pTest 	 := getFirstTestCase();
			IF pTest <> 0 THEN
				logInfo(CONCAT('Execute Testcase ', pTest^.getId()));
			END_IF;
			o_eState  := EState_t.eStatePrepare;
			o_eResult := EResult_t.eStatePassed;
		END_IF;

	EState_t.eStatePrepare:
	
		sStatistic.u32Executed  := 0;
		sStatistic.u32Passed 	:= 0;
		sStatistic.u32Failed 	:= 0;
		sStatistic.u32Asserts 	:= 0;

		IF pTest <> 0 THEN
			IF pTest^._prepare() = TRUE THEN
				pTest 	:= getNextTestCase();
			END_IF;
		ELSE
			o_eState := EState_t.eStateExecute;
			pTest 	:= getFirstTestCase();
		END_IF;

	EState_t.eStateExecute:

		IF pTest <> 0 THEN

			IF pTest^.isSkipped() = FALSE THEN

				pTest^.setStartTime();

				IF pTest^._execute() = TRUE 								OR 
					pTest^.o_eResult  = EResult_t.eStateFailedFatal THEN
					
					pTest^.setEndTime();
					sStatistic.u32Executed := sStatistic.u32Executed + 1;	
				
					sStatistic.u32Passed 	:= sStatistic.u32Passed + pTest^.getPassed();
					sStatistic.u32Failed 	:= sStatistic.u32Failed + pTest^.getFailed();
					sStatistic.u32Asserts   := sStatistic.u32Passed + sStatistic.u32Failed;
					
					// Status des aktuellen Tests auswerten
					CASE pTest^.o_eResult OF
					EResult_t.eStatePassed     : logInfo('	Test Passed');
					EResult_t.eStateFailed     : logInfo('	Test Failed');
					EResult_t.eStateFailedFatal: logInfo('	Test Failed Fatal');	
					END_CASE
					
					// Status der Testsuite ermitteln
					CASE o_eResult OF 
	
					EResult_t.eStatePassed:
						// Status des letzen Tests übernehmen
						o_eResult := pTest^.o_eResult;
						
		
					EResult_t.eStateFailed:
						// Status nur übernehmen wenn ein Fatal-Status
						// ermittelt wird und der Test sofort abgebrochen
						// werden soll.
						IF pTest^.o_eResult = EResult_t.eStateFailedFatal THEN
							o_eResult := pTest^.o_eResult;
							o_eState  := EState_t.eStateCleanUp;
							pTest 	  := getFirstTestCase();	
						END_IF;
						
	
					EResult_t.eStateFailedFatal:
	
						o_eState := EState_t.eStateCleanUp;
						pTest 	:= getFirstTestCase();				
	
					END_CASE;
	
					IF o_eResult <> EResult_t.eStateFailedFatal THEN
						pTest 	 := getNextTestCase();
					END_IF;
	
				END_IF;
			ELSE
				pTest 	 := getNextTestCase();
			END_IF;
		ELSE
			o_eState := EState_t.eStateCleanUp;
			pTest 	:= getFirstTestCase();
		END_IF;

	ESTate_t.eStateCleanUp:

		IF pTest <> 0 THEN
			IF pTest^._cleanup() = TRUE THEN
				pTest 	:= getNextTestCase();
			END_IF;
		ELSE
			o_eState := EState_t.eStateReady;
		END_IF;
		
	ESTate_t.eStateReady:
	
		IF i_bStart = FALSE THEN
			o_eState := EState_t.eStateIdle;
		END_IF
		
	ESTate_t.eStateError:	
		
		// wenn wir hier rauskommen ist was dummes passiert
		
	ELSE
		
		o_eState := EState_t.eStateError;
		
	END_CASE;
	
	
	
	
	
	
//	]]></ST>
    </Implementation>
    <Method Name="addTestcase" Id="{80822225-6192-4f00-bbb8-24a92c6881f7}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.addTestcase
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
i_pTestCase

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC addTestcase : BOOL
VAR_INPUT
	i_pTestCase : TestCaseHandle_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	addTestcase := FALSE;

	IF 	i_pTestCase  <> 0   AND 
		u16TestCases <  255 THEN
		
		a_pTest[u16TestCases] := i_pTestCase;
		
		u16TestCases := u16TestCases +1;
		
		sStatistic.u32TestCases := sStatistic.u32TestCases + 1;
		
		addTestcase := true;
	END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{cdfd5773-6fa2-4b78-87a3-142799abac6a}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.FB_init
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
i_pTestCase

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains 	: BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode 	: BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	i_strId	  		: ObjectId_t;
	i_strPath		: ObjectId_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	strId 	:= i_StrId;
	strPath := i_strPath;
	register();]]></ST>
      </Implementation>
    </Method>
    <Method Name="getExecuted" Id="{804ee58b-a056-4a70-9969-b35be52cb2ce}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getExecuted
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getExecuted : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getExecuted := sStatistic.u32Executed;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getFailed" Id="{ce9f9fb8-dfbd-411b-9557-00a87161e21a}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getFailed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getFailed : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getFailed := sStatistic.u32Failed;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getFirstTestCase" Id="{565a7440-2552-4228-bd2b-b6378bb5c8b9}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getFirstTestCase
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getFirstTestCase : TestCaseHandle_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	u16Index := 0;
	getFirstTestCase := a_pTest[0];]]></ST>
      </Implementation>
    </Method>
    <Method Name="getId" Id="{f75a7191-de66-4010-8dda-4a26aa6a90f4}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getId
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getId : STRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getId := strId;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getNextTestCase" Id="{caddd296-a017-4642-872a-27f49eaad75c}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getNextTestCase
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getNextTestCase : TestCaseHandle_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getNextTestCase := 0;
	u16Index 		 := u16Index + 1;

	IF u16Index < u16TestCases THEN
		getNextTestCase := a_pTest[u16Index];
	END_IF;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getNoOfAsserts" Id="{90c2aaf2-cbc5-46bd-85ef-aa252e2f8d0f}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getNoOfAsserts
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getNoOfAsserts : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getNoOfAsserts := sStatistic.u32Asserts;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getNoOfTests" Id="{5c45c94a-2ee3-4a94-bafd-ed5fe0d7c4f1}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getNoOfTests
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getNoOfTests : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getNoOfTests := sStatistic.u32TestCases;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getPassed" Id="{613bafe4-a0f5-4b42-965c-d87e0581e3fb}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.getPassed
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PUBLIC getPassed : UDINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getPassed := sStatistic.u32Passed;]]></ST>
      </Implementation>
    </Method>
    <Method Name="getPath" Id="{0c655e80-1810-4039-ac18-fb19e58b187c}">
      <Declaration><![CDATA[{attribute 'hide'} 
METHOD PUBLIC getPath : ObjectId_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	getPath := strPath;]]></ST>
      </Implementation>
    </Method>
    <Method Name="logInfo" Id="{4162b475-e111-4ea4-af72-09599d7cdb23}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.logInfo
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
i_strMessage

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PROTECTED logInfo : BOOL
VAR_INPUT
	i_strMessage : StrMessage_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	ADSLOGSTR(msgCtrlMask 	:= ADSLOG_MSGTYPE_HINT , 
			  msgFmtStr 	:= i_strMessage, 
			  strArg 		:= '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="register" Id="{3a42094d-f3f7-40aa-9e2e-e1eb00f9e432}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_Testsuite.register
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
{attribute 'hide'} 
METHOD PROTECTED register : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	bRegistered := PRG_UnitTestLib.addTestSuite(this);]]></ST>
      </Implementation>
    </Method>
    <ObjectProperties>
      <XmlArchive>
        <Data>
          <o xml:space="preserve" t="LicenseProperty">
            <l2 n="Licenses" />
          </o>
        </Data>
        <TypeList>
          <Type n="LicenseProperty">{ec6b18ef-cd41-4646-b1b3-985c60f930b9}</Type>
        </TypeList>
      </XmlArchive>
    </ObjectProperties>
    <LineIds Name="FB_Testsuite">
      <LineId Id="3" Count="48" />
      <LineId Id="174" Count="1" />
      <LineId Id="52" Count="83" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.addTestcase">
      <LineId Id="3" Count="12" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.FB_init">
      <LineId Id="3" Count="2" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getExecuted">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getFailed">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getFirstTestCase">
      <LineId Id="3" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getId">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getNextTestCase">
      <LineId Id="3" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getNoOfAsserts">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getNoOfTests">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getPassed">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.getPath">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.logInfo">
      <LineId Id="3" Count="2" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Testsuite.register">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>