<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="FB_TestReportBase" Id="{57a69a83-3743-4ea7-bdac-7bf43020bf6d}" SpecialFunc="None">
    <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestReportBase
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Dieser Baustein enthält alle zugeordneten Testfälle. Ein Testfall
ist ein abgeleiteter Baustein (FB) von FB_UnitTestBase.

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
FUNCTION_BLOCK FB_TestReportBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	strBuffer   : STRING(255);
	fbOpen      : FB_FileOpen;
	fbClose     : FB_FileClose;
	fbWrite	    : FB_FileWrite;
	strFileName : StrFileName_t;
	strFilePath : StrPathName_t;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="addDate" Id="{0408941f-be17-4975-a4d3-81cf25601963}">
      <Declaration><![CDATA[METHOD PROTECTED addDate : ERetCode_t
VAR_INPUT
	i_sDate : DATE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	addDate := ERetcode_t.eRetDone;]]></ST>
      </Implementation>
    </Method>
    <Method Name="addString" Id="{4c535bf5-3435-40c3-9f3f-025a5370c009}">
      <Declaration><![CDATA[METHOD PROTECTED addString : ERetCode_t
VAR_INPUT
	i_strData : STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	addString := ERetcode_t.eRetDone;]]></ST>
      </Implementation>
    </Method>
    <Method Name="addTime" Id="{335d564d-668c-409c-81f2-8ba348ca2749}">
      <Declaration><![CDATA[METHOD PROTECTED addTime : ERetCode_t
VAR_INPUT
	i_sTime : TIME;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	addTime := ERetcode_t.eRetDone;]]></ST>
      </Implementation>
    </Method>
    <Method Name="addValue" Id="{080ec401-f73b-4e7c-a609-de9be077f506}">
      <Declaration><![CDATA[METHOD PROTECTED addValue : ERetCode_t
VAR_INPUT
	i_anyValue : ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	addValue  := ERetcode_t.eRetDone;
	
	IF i_anyValue.pValue = 0 THEN
		addValue  := ERetcode_t.eRetFailed;
		RETURN;
	END_IF
	
	
	
	CASE i_anyValue.TypeClass OF
	
	TYPE_DINT:
	TYPE_UDINT:
	
	TYPE_INT:
	TYPE_UINT:
	
	TYPE_SINT:
	TYPE_USINT:
	
	TYPE_REAL:
	
	END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="BuildFile" Id="{39e83c8e-0870-44ee-a5eb-4cd1ef5dc7cd}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestReportBase.BuildFile
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode muss vom ableitenden Baustein überschrieben werden und
wird von der Basisklasse aus aufgerufen wenn der Report erstellt werden
soll.

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
METHOD PROTECTED BuildFile : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="clearBuffer" Id="{1cda8ca9-da92-4299-9f1c-2c748176bb92}">
      <Declaration><![CDATA[METHOD PROTECTED clearBuffer : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	clearBuffer := ERetCode_t.eRetDone;
	
	strBuffer := '';]]></ST>
      </Implementation>
    </Method>
    <Method Name="Close" Id="{5d9bee46-233e-412e-9191-8b8d1c795b05}">
      <Declaration><![CDATA[METHOD PROTECTED Close : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	Close := ERetCode_t.eRetFailed;
	
	fbClose(hFile := fbOpen.hFile, bExecute := TRUE); 
			
	IF fbClose.bBusy = TRUE THEN
		Close := ERetCode_t.eRetBusy;
	ELSE
		Close := ERetCode_t.eRetDone;
		fbClose(bExecute := FALSE); 
	END_IF;	
	
	IF fbClose.bError = TRUE THEN
		Close := eRetCode_t.eRetFailed;
	END_IF;			]]></ST>
      </Implementation>
    </Method>
    <Method Name="create" Id="{53725c36-ea6e-4f37-9c78-095fc806a86d}">
      <Declaration><![CDATA[METHOD PUBLIC create : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="getFileName" Id="{9251c5ba-20de-428c-96f9-f4ec9b2c4f20}">
      <Declaration><![CDATA[(******************************************************************************
Baustein: FB_TestReportBase.getFileName
Spezifikation: doc/Spezifikation.pdf, Kap. x.y.z
-------------------------------------------------------------------------------
erstellt:
von:
Geändert:
von:
-------------------------------------------------------------------------------
Beschreibung
Diese Methode muss vom ableitenden Baustein überschrieben werden und
wird von der Basisklasse aus aufgerufen wenn der Report erstellt werden
soll.

-------------------------------------------------------------------------------
Input
-

Output
-
******************************************************************************)
METHOD PROTECTED getFileName : ERetCode_t
VAR_INPUT
	i_pFileName : NameHandle_t;
	i_pPath		: PathHandle_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="open" Id="{9fd78083-eb57-4d5e-afe2-d8c17aed742e}">
      <Declaration><![CDATA[METHOD PROTECTED open : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	open := ERetCode_t.eRetFailed;
	
	fbOpen(sPathName := CONCAT(strFilePath, strFileName),
			nMode 	 := FOPEN_MODEWRITE OR FOPEN_MODEBINARY,	
			bExecute := TRUE ); 
			
	IF fbOpen.bBusy = TRUE THEN
		open := ERetCode_t.eRetBusy;
	ELSE	
		open := ERetCode_t.eRetDone;
		fbOpen(bExecute := FALSE); 	
	END_IF;	
	
	IF fbOpen.bError = TRUE THEN
		open := eRetCode_t.eRetFailed;
	END_IF;				]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{e9e30890-91ac-49c8-8901-49ef1b4d34d0}">
      <Declaration><![CDATA[METHOD PUBLIC reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	IF fbOpen.hFile <> 0 THEN
		close();
	END_IF
	
	clearBuffer();

	fbOpen(bExecute := FALSE);
	
	fbWrite(bExecute := FALSE);
	
	fbClose(bExecute := FALSE);
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="writeBuffer" Id="{f084208a-f262-4a5d-aed7-4faef714123c}">
      <Declaration><![CDATA[METHOD PROTECTED writeBuffer : ERetCode_t
VAR_INPUT
END_VAR
VAR
	u32Len : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	writeBuffer := eRetCode_t.eRetFailed;
	
	IF LEN(strBuffer) <= 0 THEN
		RETURN;
	END_IF
	
	u32Len := TO_UDINT(LEN(strBuffer)); 
	
	fbWrite(pWriteBuff 	:= ADR(strBuffer),
			cbWriteLen 	:= u32Len,
			hfile 		:= fbOpen.hFile,
			bExecute    := TRUE);
			
	IF fbWrite.bBusy = TRUE THEN
		writeBuffer := ERetCode_t.eRetBusy;
	ELSE	
		writeBuffer := ERetCode_t.eRetDone;
		fbWrite(bExecute := FALSE); 	
	END_IF;	

	IF fbWrite.bError = TRUE THEN
		writeBuffer := eRetCode_t.eRetFailed;
	END_IF;			]]></ST>
      </Implementation>
    </Method>
    <Method Name="writeCrlf" Id="{02d6d158-8072-47ef-92d4-ec74f37c2961}">
      <Declaration><![CDATA[METHOD PROTECTED writeCrlf : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="writeData" Id="{220bec13-b522-42c6-9b51-76b9580728dc}">
      <Declaration><![CDATA[METHOD PROTECTED writeData : ERetCode_t
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TestReportBase">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.addDate">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.addString">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.addTime">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.addValue">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="9" Count="1" />
      <LineId Id="20" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="23" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="25" Count="1" />
      <LineId Id="22" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.BuildFile">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.clearBuffer">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="1" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.Close">
      <LineId Id="6" Count="3" />
      <LineId Id="11" Count="5" />
      <LineId Id="5" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.create">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.getFileName">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.open">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="2" />
      <LineId Id="14" Count="0" />
      <LineId Id="10" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="15" Count="2" />
      <LineId Id="12" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.reset">
      <LineId Id="14" Count="5" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.writeBuffer">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="22" Count="5" />
      <LineId Id="7" Count="5" />
      <LineId Id="14" Count="4" />
      <LineId Id="13" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="30" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.writeCrlf">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TestReportBase.writeData">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>